#include "Armor.h"

#include "utils/InitialData.h"
#include "utils/GlobalData.h"

void Armor::initData()
{

}

Armor::Armor()
    : m_playerPosition{nullptr}
    , m_playerSize{nullptr}
    , m_playerCenter{nullptr}
    , m_playerRotationAngle{nullptr}
{

}

Armor::~Armor()
{

}

void Armor::setHelmetRenderModel()
{

}

void Armor::setChestRenderModel()
{

}

void Armor::setArmsRenderModel()
{

}

void Armor::setForearmsRenderModel()
{

}

void Armor::setGlovesRenderModel()
{

}

void Armor::setHelmetProperties()
{
    m_helmet.protection = InitialData::Armor::
}

void Armor::setChestProperties()
{

}

void Armor::setArmsProperties()
{

}

void Armor::setForearmsProperties()
{

}

void Armor::setGlovesProperties()
{

}

void Armor::init()
{
    this->initData();
}

void Armor::pollEvent(const sf::Event &event)
{

}

void Armor::update()
{

}

void Armor::render(sf::RenderTarget *target)
{

}

float Armor::getProtection() const
{
    return m_protection.helmet +
           m_protection.chest +
           m_protection.arms +
           m_protection.forearms +
           m_protection.gloves;
}

void Armor::setPlayerPosition(const sf::Vector2f *position)
{
    m_playerPosition = position;
}

void Armor::setPlayerSize(const sf::Vector2f *size)
{
    m_playerSize = size;
}

void Armor::setPlayerCenter(const sf::Vector2f *center)
{
    m_playerCenter = center;
}

void Armor::setPlayerRotationAngle(const float *rotationAngle)
{
    m_playerRotationAngle = rotationAngle;
}

void Armor::setHelmet(int helmetIndex)
{

}

void Armor::setChest(int chestIndex)
{

}

void Armor::setArms(int armsIndex)
{

}

void Armor::setForearms(int forearmsIndex)
{

}

void Armor::setGloves(int glovesIndex)
{

}
